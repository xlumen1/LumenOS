name: Release

permissions:
    contents: write

on:
    workflow_dispatch

jobs:
    release:
        runs-on: ubuntu-latest
        steps:
          - name: Checkout code
            uses: actions/checkout@v4

          - name: Install build dependencies
            run: |
              sudo apt-get update
              sudo apt-get -y install $(cat README.md | grep "^- \`" | sed -n "s/^- \`\(.*\)\`$/\1/p" | paste -sd' ')

          - name: Build kernel
            run: |
              make build
              make iso

          - name: Read version from version.json
            id: version
            run: |
              VERSION=$(jq -r '.version' version.json)
              SUB=$(jq -r '.sub' version.json)
              echo "VERSION_FULL=${VERSION}-${SUB}" >> $GITHUB_OUTPUT
              echo "VERSION_TITLE=v${VERSION}" >> $GITHUB_OUTPUT
              echo "RELEASE_NOTES<<EOF" >> $GITHUB_OUTPUT
              cat RELEASE.md >> $GITHUB_OUTPUT
              echo "EOF" >> $GITHUB_OUTPUT
              

          - name: Create GitHub Release
            id: create_release
            uses: actions/create-release@v1
            env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            with:
              tag_name: ${{ steps.version.outputs.VERSION_FULL }}
              release_name: ${{ steps.version.outputs.VERSION_TITLE }}
              body: ${{ steps.version.outputs.RELEASE_NOTES }}
              draft: false
              prerelease: false

          - name: Upload kernel.bin to Release
            uses: actions/upload-release-asset@v1
            env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            with:
              upload_url: ${{ steps.create_release.outputs.upload_url }}
              asset_path: build/kernel.bin
              asset_name: kernel.bin
              asset_content_type: application/octet-stream
          - name: Upload install.iso to Release
            uses: actions/upload-release-asset@v1
            env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            with:
              upload_url: ${{ steps.create_release.outputs.upload_url }}
              asset_path: build/install.iso
              asset_name: LumenOS(${{ steps.version.outputs.VERSION_FULL }}).iso
              asset_content_type: application/octet-stream
